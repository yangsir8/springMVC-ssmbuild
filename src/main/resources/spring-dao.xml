<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--      1.关联数据库配置文件-->
    <context:property-placeholder location="classpath:database.properties"/>
    <!--       2.连接池  dpcp:半自动化操作，不能自动连接
                        c3p0：自动化操作（自动化加载配置文件，并且可以自动设置到对象中）
                         druid：
                         hikari -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--             c3p0的私有属性-->
        <!--              最大连接池-->
        <property name="maxPoolSize" value="30"/>
        <!--              最小连接池数-->
        <property name="minPoolSize" value="10"/>
        <!--              关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--              获取连接超时时间，-->
        <property name="checkoutTimeout" value="10000"/>
        <!--              获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>


    <!--       3.SqlSessionFactory-->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--              绑定Mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

<!--    配置到接扫描包，动态实现了Dao接口可以注入到Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        注入SqlSessionFactory-->
<!--        一开始以为是要传入一个ref，但是点进源码去看发现需要传入一个String类型的参数，所以传入一个value-->
<!--        这里传入value就好，运行时会根据传入的string参数进行自动扫描，将对应的类加载进去-->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
<!--        要扫描的dao包-->
<!--        spring会自动扫描该目录下的包，就不用手动去写实现类了-->
        <property name="basePackage" value="com.yang.dao"/>

    </bean>



</beans>